name: No Local Training Guard

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    - cron: '0 0 * * *'

jobs:
  guard-no-local-train:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pyyaml

    - name: Check ALLOW_LOCAL_TRAIN environment variable
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è ALLOW_LOCAL_TRAIN..."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if [ "${{ secrets.ALLOW_LOCAL_TRAIN }}" = "true" ]; then
          echo "‚ùå ALLOW_LOCAL_TRAIN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ true!"
          echo "üí° –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –≤ —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ"
          echo "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–Ω–µ—à–Ω–∏–µ –∫–ª–∞—Å—Ç–µ—Ä—ã –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏"
          exit 1
        fi

        if [ "${{ vars.ALLOW_LOCAL_TRAIN }}" = "true" ]; then
          echo "‚ùå ALLOW_LOCAL_TRAIN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ true –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è!"
          exit 1
        fi

        echo "‚úÖ ALLOW_LOCAL_TRAIN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ false"

    - name: Check for local training code paths
      run: |
        echo "üîç –ü–æ–∏—Å–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è..."

        # –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤, —É–∫–∞–∑—ã–≤–∞—é—â–∏—Ö –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
        forbidden_patterns=(
          "train.*local"
          "local.*train"
          "localhost.*train"
          "127.0.0.1.*train"
          "accelerate.*launch"
          "torchrun"
          "python.*train"
          "deepspeed.*--num_gpus"
          "CUDA_VISIBLE_DEVICES.*[0-9]"
        )

        exit_code=0

        for pattern in "${forbidden_patterns[@]}"; do
          if grep -r -i "$pattern" --include="*.py" --include="*.sh" --include="*.yaml" --include="*.yml" . > /dev/null; then
            echo "‚ùå –ù–∞–π–¥–µ–Ω –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω: $pattern"
            exit_code=1
          fi
        done

        if [ $exit_code -eq 0 ]; then
          echo "‚úÖ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        else
          echo "üí° –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∂–Ω–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∫–æ–¥"
          exit 1
        fi

    - name: Check training launcher for guards
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∞—É–Ω—á–µ—Ä–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≥–≤–∞—Ä–¥–æ–≤..."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–∞—É–Ω—á–µ—Ä–∞
        if [ ! -f "training/launcher.py" ]; then
          echo "‚ùå –§–∞–π–ª training/launcher.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
          exit 1
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≥–≤–∞—Ä–¥–∞ –≤ –ª–∞—É–Ω—á–µ—Ä–µ
        if ! grep -q "ALLOW_LOCAL_TRAIN" training/launcher.py; then
          echo "‚ùå –í –ª–∞—É–Ω—á–µ—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ ALLOW_LOCAL_TRAIN"
          exit 1
        fi

        if ! grep -q "local.*train.*not.*allowed" training/launcher.py; then
          echo "‚ùå –í –ª–∞—É–Ω—á–µ—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"
          exit 1
        fi

        echo "‚úÖ –õ–∞—É–Ω—á–µ—Ä –æ–±—É—á–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥–≤–∞—Ä–¥—ã"

    - name: Check Makefile for local training targets
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Makefile –Ω–∞ —Ü–µ–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è..."

        # –ü–æ–∏—Å–∫ —Ü–µ–ª–µ–π –æ–±—É—á–µ–Ω–∏—è –≤ Makefile
        if grep -q "^train:" Makefile; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω–∞ —Ü–µ–ª—å train –≤ Makefile"
          echo "üí° –£–¥–∞–ª–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≥–≤–∞—Ä–¥—ã"
          exit 1
        fi

        if grep -q "accelerate.*launch" Makefile; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω accelerate launch –≤ Makefile"
          exit 1
        fi

        echo "‚úÖ Makefile –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π –æ–±—É—á–µ–Ω–∏—è"

    - name: Check CI workflows for local training
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CI workflow —Ñ–∞–π–ª–æ–≤ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ..."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö .yml —Ñ–∞–π–ª–æ–≤ –≤ .github/
        if [ -d ".github" ]; then
          for workflow in .github/workflows/*.yml; do
            if [ -f "$workflow" ]; then
              if grep -q "train" "$workflow" && grep -q "run:" "$workflow"; then
                echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π workflow —Å –æ–±—É—á–µ–Ω–∏–µ–º: $(basename "$workflow")"
                # –ù–µ —Ñ–µ–π–ª–∏–º —Å—Ä–∞–∑—É, —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
              fi
            fi
          done
        fi

        echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ CI workflow –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

    - name: Verify external model guard is active
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≥–≤–∞—Ä–¥–∞ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π..."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –≥–≤–∞—Ä–¥–∞
        if [ ! -f "ci/guard_external_models.yml" ]; then
          echo "‚ùå –§–∞–π–ª ci/guard_external_models.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
          exit 1
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        forbidden_models=("gpt2" "llama" "mistral" "qwen" "phi" "gemma" "opt" "bloom" "falcon" "pythia")

        for model in "${forbidden_models[@]}"; do
          if ! grep -q "$model" ci/guard_external_models.yml; then
            echo "‚ö†Ô∏è  –ú–æ–¥–µ–ª—å $model –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö"
          fi
        done

        echo "‚úÖ –ì–≤–∞—Ä–¥ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π –∞–∫—Ç–∏–≤–µ–Ω"

    - name: Generate no-local-train report
      run: |
        echo "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –æ —Å—Ç–∞—Ç—É—Å–µ –≥–≤–∞—Ä–¥–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è..."

        echo "
        # No Local Training Guard Report

        **Generated:** $(date)

        **Status:** ‚úÖ ACTIVE

        **Checks performed:**
        - ‚úÖ Environment variable check
        - ‚úÖ Code pattern analysis
        - ‚úÖ Training launcher guards
        - ‚úÖ Makefile validation
        - ‚úÖ External model guard verification

        **Recommendations:**
        - Keep ALLOW_LOCAL_TRAIN=false in production
        - Monitor for new training scripts
        - Regular CI/CD pipeline reviews

        **Project compliance:** Oracle850B-MoE (Own Architecture Only)
        " > no_local_train_report.md

        echo "‚úÖ –û—Ç—á—ë—Ç –æ –≥–≤–∞—Ä–¥–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"

    - name: Upload report artifact
      uses: actions/upload-artifact@v3
      with:
        name: no-local-train-report
        path: no_local_train_report.md
