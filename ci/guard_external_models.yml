name: Guard External Models

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  guard-external-models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Guard against external models
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ –º–æ–¥–µ–ª–∏ —Å ripgrep..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å ripgrep (–±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–π –∏ —Ç–æ—á–Ω—ã–π)
        if rg -n "gpt2|llama|mistral|qwen|phi|gemma|opt|bloom|falcon|pythia" -S .; then
          echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –º–æ–¥–µ–ª–∏!"
          echo "üí° Oracle850B –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"
          echo "üí° –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π"
          exit 1
        else
          echo "‚úÖ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    
    - name: Check for external model imports
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π..."
        
        # –ü–æ–∏—Å–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ transformers —Å ripgrep
        if rg -n "from transformers import.*(gpt2|llama|mistral|qwen|phi|gemma|opt)" --include="*.py" .; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –∏–º–ø–æ—Ä—Ç—ã –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π –∏–∑ transformers"
          exit 1
        fi
        
        # –ü–æ–∏—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π
        if rg -n "\.from_pretrained.*(gpt2|llama|mistral|qwen|phi|gemma|opt)" --include="*.py" .; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –≤—ã–∑–æ–≤—ã from_pretrained –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π"
          exit 1
        fi
        
        echo "‚úÖ –ò–º–ø–æ—Ä—Ç—ã –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    - name: Verify Oracle850B architecture
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Oracle850B..."
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if [ ! -f "src/oracle/moe850b/modeling/transformer_moe.py" ]; then
          echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç transformer_moe.py"
          exit 1
        fi
        
        if [ ! -f "src/oracle/moe850b/configs/model/oracle850b.moe.json" ]; then
          echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –º–æ–¥–µ–ª–∏ oracle850b.moe.json"
          exit 1
        fi
        
        echo "‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Oracle850B –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
    
    - name: Check for external checkpoints
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —á–µ–∫–ø–æ–π–Ω—Ç–æ–≤..."
        
        # –ü–æ–∏—Å–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —á–µ–∫–ø–æ–π–Ω—Ç—ã —Å ripgrep
        if rg -n "huggingface\.co" --include="*.py" --include="*.json" --include="*.yaml" .; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ Hugging Face"
          exit 1
        fi
        
        if rg -n "s3://.*(gpt2|llama|mistral|qwen|phi|gemma|opt)" --include="*.py" --include="*.json" .; then
          echo "‚ùå –ù–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–Ω–µ—à–Ω–∏–µ —á–µ–∫–ø–æ–π–Ω—Ç—ã –≤ S3"
          exit 1
        fi
        
        echo "‚úÖ –í–Ω–µ—à–Ω–∏–µ —á–µ–∫–ø–æ–π–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    - name: Enforce venv
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        python -c "
        import os, sys
        assert os.getenv('VIRTUAL_ENV'), 'VENV required - activate .venv'
        assert '.venv' in sys.executable, 'Not using venv Python'
        print('‚úÖ Virtual environment verified')
        "
