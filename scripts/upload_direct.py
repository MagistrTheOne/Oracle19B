#!/usr/bin/env python3
"""
Oracle850B Direct Upload
–ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
Author: MagistrTheOne|–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä|2025
"""

import os
import sys
from pathlib import Path
from huggingface_hub import HfApi, login


def upload_direct():
    """–ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º"""
    print("üöÄ Oracle850B Direct Upload")
    print("=" * 40)
    
    # –¢–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("HF_TOKEN")
    if not token:
        print("‚ùå HF_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: set HF_TOKEN=your_token_here")
        return False

    repo_id = "MagistrTheOne/oracle850b-moe"
    
    try:
        # –õ–æ–≥–∏–Ω
        login(token=token)
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω –≤ HF Hub")
        
        # API
        api = HfApi(token=token)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = api.whoami()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['name']}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        try:
            api.create_repo(
                repo_id=repo_id,
                repo_type="model",
                private=False,
                exist_ok=True
            )
            print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: {repo_id}")
        except Exception as e:
            print(f"‚ÑπÔ∏è  –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        files_to_upload = [
            ("README.md", "README.md"),
            ("MODEL_CARD.md", "MODEL_CARD.md"),
            ("CHANGELOG.md", "CHANGELOG.md"),
            ("LICENSE", "LICENSE"),
            ("SECURITY.md", "SECURITY.md"),
            ("generation_config.json", "generation_config.json"),
            ("special_tokens_map.json", "special_tokens_map.json"),
            ("configs/model/oracle850b.moe.json", "config.json"),
            ("checkpoints/oracle850b/default_intro.txt", "default_intro.txt"),
            ("checkpoints/oracle850b/default_system.txt", "default_system.txt")
        ]
        
        print("\nüìã –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤:")
        success_count = 0
        
        for local_path, repo_path in files_to_upload:
            if Path(local_path).exists():
                try:
                    api.upload_file(
                        path_or_fileobj=local_path,
                        path_in_repo=repo_path,
                        repo_id=repo_id,
                        repo_type="model"
                    )
                    print(f"‚úÖ {local_path} ‚Üí {repo_path}")
                    success_count += 1
                except Exception as e:
                    print(f"‚ùå {local_path}: {e}")
            else:
                print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {local_path}")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞–π–∑–µ—Ä–∞
        tokenizer_dir = Path("checkpoints/oracle850b/tokenizer")
        if tokenizer_dir.exists():
            print(f"\nüî§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞–π–∑–µ—Ä–∞:")
            tokenizer_files = ["tokenizer.json", "tokenizer_config.json", "special_tokens_map.json"]
            
            for file_name in tokenizer_files:
                file_path = tokenizer_dir / file_name
                if file_path.exists():
                    try:
                        api.upload_file(
                            path_or_fileobj=str(file_path),
                            path_in_repo=f"tokenizer/{file_name}",
                            repo_id=repo_id,
                            repo_type="model"
                        )
                        print(f"‚úÖ tokenizer/{file_name}")
                        success_count += 1
                    except Exception as e:
                        print(f"‚ùå tokenizer/{file_name}: {e}")
                else:
                    print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_name}")
        
        print(f"\nüìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {success_count}")
        print(f"üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://huggingface.co/{repo_id}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = upload_direct()
    sys.exit(0 if success else 1)
