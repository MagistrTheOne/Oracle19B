# Oracle850B Makefile
# Author: MagistrTheOne|–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä|2025

.ONESHELL:
.PHONY: help prep-tb infra-plan ci-guards clean install test venv sync bootstrap

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3.11
VENV := .venv
ACTIVATE := source $(VENV)/bin/activate
PIP := $(VENV)/bin/pip
PYTHON_VENV := $(VENV)/bin/python

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED := \033[0;31m
GREEN := \033[0;32m
YELLOW := \033[0;33m
BLUE := \033[0;34m
NC := \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)Oracle850B Makefile$(NC)"
	@echo "=================="
	@echo ""
	@echo "$(GREEN)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  prep-tb      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞–π–ø–ª–∞–π–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (dry-run)"
	@echo "  infra-plan   - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (terraform plan)"
	@echo "  ci-guards    - –ó–∞–ø—É—Å–∫ CI –≥–≤–∞—Ä–¥–æ–≤"
	@echo "  install      - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
	@echo "  test         - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
	@echo "  clean        - –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
	@echo ""
	@echo "$(GREEN)–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:$(NC)"
	@echo "  venv         - –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  deps         - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  lint         - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
	@echo "  format       - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞"
	@echo ""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
venv: ## –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
	@echo "$(BLUE)–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	$(PYTHON) -m venv $(VENV)
	$(ACTIVATE); pip -q install -U pip wheel
	@echo "$(GREEN)‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ$(NC)"

bootstrap: ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (venv + deps + –ø—Ä–æ–≤–µ—Ä–∫–∏)
	@echo "$(BLUE)üöÄ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Oracle850B...$(NC)"
	chmod +x scripts/bootstrap.sh
	./scripts/bootstrap.sh
	@echo "$(GREEN)‚úÖ Bootstrap –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"

sync: ## –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (venv required)
	@echo "$(BLUE)üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	$(ACTIVATE); pip -q install -r requirements.lock || true
	$(ACTIVATE); pip -q install -r requirements.in && pip freeze > requirements.lock
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã$(NC)"

install: venv sync ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
prep-tb: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞–π–ø–ª–∞–π–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (dry-run)
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö Oracle850B$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è  –≠—Ç–æ dry-run - —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è$(NC)"
	@echo ""
	
	@echo "$(BLUE)1. –ò–Ω–≥—Ä–µ—Å—Ç –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON_VENV) datasets/scripts/ingest.py --https-urls "https://example.com/data1.txt" "https://example.com/data2.txt" --max-files 10 --output-dir data/raw
	@echo "$(GREEN)‚úÖ –ò–Ω–≥—Ä–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"
	
	@echo "$(BLUE)2. –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON_VENV) datasets/scripts/clean_generic.py --input-file data/raw/example.com_data1.txt --output-dir data/clean
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
	
	@echo "$(BLUE)3. –î–µ-–∫–æ–Ω—Ç–∞–º–∏–Ω–∞—Ü–∏—è...$(NC)"
	$(PYTHON_VENV) datasets/scripts/decontaminate.py --input-file data/clean/cleaned_example.com_data1.txt --output-dir data/decontaminated
	@echo "$(GREEN)‚úÖ –î–µ-–∫–æ–Ω—Ç–∞–º–∏–Ω–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
	
	@echo "$(BLUE)4. –®–∞—Ä–¥–∏–Ω–≥ –≤ WebDataset...$(NC)"
	$(PYTHON_VENV) datasets/scripts/shard_webdataset.py --input-file data/decontaminated/decontaminated_cleaned_example.com_data1.txt --output-dir data/webdataset --split train
	@echo "$(GREEN)‚úÖ –®–∞—Ä–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω$(NC)"
	
	@echo "$(BLUE)5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	$(PYTHON_VENV) datasets/scripts/stats.py --input-file data/decontaminated/decontaminated_cleaned_example.com_data1.txt --output-dir data/stats --quality-report
	@echo "$(GREEN)‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ—Ç–æ–≤–∞$(NC)"
	
	@echo ""
	@echo "$(GREEN)üéâ –ü–∞–π–ø–ª–∞–π–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!$(NC)"
	@echo "$(YELLOW)üí° –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–º–µ–Ω–∏—Ç–µ URL –Ω–∞ –≤–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏$(NC)"

# –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
infra-plan: ## –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (terraform plan)
	@echo "$(BLUE)üèóÔ∏è  –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã Oracle850B$(NC)"
	@echo ""
	
	@echo "$(BLUE)1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Terraform...$(NC)"
	cd infra/terraform && terraform init
	@echo "$(GREEN)‚úÖ Terraform –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω$(NC)"
	
	@echo "$(BLUE)2. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤...$(NC)"
	cd infra/terraform && terraform plan -var-file=terraform.tfvars.example
	@echo "$(GREEN)‚úÖ –ü–ª–∞–Ω –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≥–æ—Ç–æ–≤$(NC)"
	
	@echo ""
	@echo "$(YELLOW)üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: terraform apply$(NC)"
	@echo "$(YELLOW)üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å terraform.tfvars$(NC)"

# CI –∏ –≥–≤–∞—Ä–¥—ã
ci-guards: ## –ó–∞–ø—É—Å–∫ CI –≥–≤–∞—Ä–¥–æ–≤
	@echo "$(BLUE)üõ°Ô∏è  –ó–∞–ø—É—Å–∫ CI –≥–≤–∞—Ä–¥–æ–≤ Oracle850B$(NC)"
	@echo ""
	
	@echo "$(BLUE)1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π...$(NC)"
	$(PYTHON_VENV) -c "
	import subprocess
	import sys
	
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
	forbidden = ['gpt2', 'llama', 'mistral', 'qwen', 'phi', 'gemma', 'opt']
	found = False
	
	for model in forbidden:
		result = subprocess.run(['grep', '-r', '-i', model, '--include=*.py', '--include=*.json', '--include=*.yaml', '.'], 
		                      capture_output=True, text=True)
		if result.returncode == 0:
			print(f'‚ùå –ù–∞–π–¥–µ–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ {model}')
			found = True
	
	if found:
		print('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –º–æ–¥–µ–ª–∏!')
		sys.exit(1)
	else:
		print('‚úÖ –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
	"
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–æ–π–¥–µ–Ω–∞$(NC)"
	
	@echo "$(BLUE)2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è...$(NC)"
	$(PYTHON_VENV) scripts/guard_no_local_train.py --check
	@echo "$(GREEN)‚úÖ –ì–≤–∞—Ä–¥ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–µ–Ω$(NC)"
	
	@echo "$(BLUE)3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Oracle850B...$(NC)"
	@test -f "configs/model/oracle850b.moe.json" || (echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –º–æ–¥–µ–ª–∏" && exit 1)
	@test -f "src/oracle/core/modeling/transformer_moe.py" || (echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç MoE —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä" && exit 1)
	@echo "$(GREEN)‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Oracle850B –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞$(NC)"
	
	@echo ""
	@echo "$(GREEN)üéâ –í—Å–µ CI –≥–≤–∞—Ä–¥—ã –ø—Ä–æ–π–¥–µ–Ω—ã!$(NC)"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
test: ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Oracle850B$(NC)"
	@echo ""
	
	@echo "$(BLUE)1. –¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞–π–∑–µ—Ä–∞...$(NC)"
	$(PYTHON_VENV) -c "
	import sys
	sys.path.append('src')
	from oracle.core.tokenization.build_tokenizer import OracleTokenizerBuilder
	builder = OracleTokenizerBuilder()
	print('‚úÖ –¢–æ–∫–µ–Ω–∞–π–∑–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
	"
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞–π–∑–µ—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω$(NC)"
	
	@echo "$(BLUE)2. –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥–æ–≤...$(NC)"
	$(PYTHON_VENV) -c "
	import json
	with open('configs/model/oracle850b.moe.json', 'r') as f:
		config = json.load(f)
	assert config['model_name'] == 'oracle850b-moe'
	assert config['param_total'] == 850000000000
	print('‚úÖ –ö–æ–Ω—Ñ–∏–≥ –º–æ–¥–µ–ª–∏ –≤–∞–ª–∏–¥–µ–Ω')
	"
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥–æ–≤ –ø—Ä–æ–π–¥–µ–Ω$(NC)"
	
	@echo "$(BLUE)3. –¢–µ—Å—Ç —Ç—Ä–µ–Ω–∏–Ω–≥-–ª–∞—É–Ω—á–µ—Ä–∞...$(NC)"
	$(PYTHON_VENV) training/launcher.py --config configs/training/oracle850b.yaml --dry-run
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç –ª–∞—É–Ω—á–µ—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω$(NC)"
	
	@echo ""
	@echo "$(GREEN)üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!$(NC)"

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
lint: ## –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	$(PIP) install flake8 black isort
	flake8 src/ training/ scripts/ --max-line-length=120 --ignore=E203,W503
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
	@echo "$(BLUE)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	$(PIP) install black isort
	black src/ training/ scripts/ --line-length=120
	isort src/ training/ scripts/ --profile=black
	@echo "$(GREEN)‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω$(NC)"

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	rm -rf __pycache__/
	rm -rf src/**/__pycache__/
	rm -rf training/**/__pycache__/
	rm -rf scripts/**/__pycache__/
	rm -rf .pytest_cache/
	rm -rf .coverage
	rm -rf htmlcov/
	rm -rf data/raw/
	rm -rf data/clean/
	rm -rf data/decontaminated/
	rm -rf data/webdataset/
	rm -rf data/stats/
	rm -rf logs/
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# Kill switch
kill-all: ## –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(RED)üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê ORACLE850B$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è  –≠—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ Kubernetes —Ä–µ—Å—É—Ä—Å—ã –∏ —É–Ω–∏—á—Ç–æ–∂–∏—Ç Terraform –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no): " confirm && [ "$$confirm" = "yes" ]
	$(PYTHON_VENV) infra/scripts/kill_switch.py --emergency-stop
	@echo "$(GREEN)‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# HF Hub
push-hf: ## –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ Hugging Face Hub
	@echo "$(BLUE)üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ Hugging Face Hub...$(NC)"
	$(PYTHON_VENV) scripts/hf_upload.py
	@echo "$(GREEN)‚úÖ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ HF Hub$(NC)"

# –°—Ç–∞—Ç—É—Å
status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å Oracle850B$(NC)"
	@echo "=================="
	@echo ""
	@echo "$(GREEN)–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:$(NC)"
	@find . -type f -name "*.py" | wc -l | xargs echo "  Python —Ñ–∞–π–ª–æ–≤:"
	@find . -type f -name "*.json" | wc -l | xargs echo "  JSON —Ñ–∞–π–ª–æ–≤:"
	@find . -type f -name "*.yaml" -o -name "*.yml" | wc -l | xargs echo "  YAML —Ñ–∞–π–ª–æ–≤:"
	@echo ""
	@echo "$(GREEN)–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:$(NC)"
	@test -f "configs/model/oracle850b.moe.json" && echo "  ‚úÖ –ö–æ–Ω—Ñ–∏–≥ –º–æ–¥–µ–ª–∏" || echo "  ‚ùå –ö–æ–Ω—Ñ–∏–≥ –º–æ–¥–µ–ª–∏"
	@test -f "configs/training/oracle850b.yaml" && echo "  ‚úÖ –ö–æ–Ω—Ñ–∏–≥ –æ–±—É—á–µ–Ω–∏—è" || echo "  ‚ùå –ö–æ–Ω—Ñ–∏–≥ –æ–±—É—á–µ–Ω–∏—è"
	@test -f "configs/deepspeed/zero3_offload.json" && echo "  ‚úÖ –ö–æ–Ω—Ñ–∏–≥ DeepSpeed" || echo "  ‚ùå –ö–æ–Ω—Ñ–∏–≥ DeepSpeed"
	@echo ""
	@echo "$(GREEN)–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞:$(NC)"
	@test -d "infra/terraform" && echo "  ‚úÖ Terraform" || echo "  ‚ùå Terraform"
	@test -d "infra/helm" && echo "  ‚úÖ Helm" || echo "  ‚ùå Helm"
	@test -f "infra/scripts/kill_switch.py" && echo "  ‚úÖ Kill Switch" || echo "  ‚ùå Kill Switch"
	@echo ""
	@echo "$(GREEN)CI/CD:$(NC)"
	@test -f "ci/guard_external_models.yml" && echo "  ‚úÖ –ì–≤–∞—Ä–¥ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π" || echo "  ‚ùå –ì–≤–∞—Ä–¥ –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥–µ–ª–µ–π"
	@test -f "ci/push_to_hub.yml" && echo "  ‚úÖ Push to Hub" || echo "  ‚ùå Push to Hub"
